#include<iostream>
#include<string>

using namespace std;

long long phi(long long x)//欧拉函数
{
    long long md=x;
    for(int i=2;i*i<=x;i++)
    {
        if(x%i==0){
            md=md-md/i;
        }
        while(x%i==0)
        {
            x/=i;
        }
    }
    if(x>1){
        md=md-md/x;
    }
    return md;
}

long long quick(long long x,long long n,long long mod)//快速幂函数
{
    long long res=1;
    while(n>0){
        if(n&1){
            res=res*x%mod;
        }
        x=x*x%mod;
        n>>=1;
    }
    return res;
}

long long quick_2(long long x,long long n,long long mod)//快速幂函数
{
    if(n==0){
        return 1;
    }
    else if(n%2==1){
        return x*quick_2(x,n/2,mod)%mod;
    }
    else {
        long long pop=quick_2(x,n/2,mod)%mod;
        return pop*pop%mod;
    }
}


int main()
{
    long long a,c;
    string b;
    while(cin>>a>>b>>c)
    {
        long long back=phi(c);
        int hd=0;
        for(int i=0;i<b.size();i++)
        {
            hd=(hd*10+b[i]-'0')%back;
        }
        hd+=back;
        cout<<quick(a,hd,c)<<endl;
    }
    return 0;
}
